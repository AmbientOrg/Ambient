name: Deploy examples

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CACHE_KEY: ambient-$GITHUB_SHA

jobs:
  build-ambient:
    runs-on: ubuntu-20.04
    steps:
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y tree libasound2-dev libglib2.0-dev libxcb-shape0-dev libxcb-xfixes0-dev \
            libcairo-dev libgtk2.0-dev libsoup2.4-dev libgtk-3-dev libwebkit2gtk-4.0-dev xorg-dev ninja-build libxcb-render0-dev
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Leafwing-Studios/cargo-cache@v1
        with:
          cache-group: "main"
      - name: Build
        run: cargo build --workspace --release
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0"
      - name: Cache ambient exectuable artifact
        uses: actions/cache/save@v3
        with:
          path: target/release/ambient
          key: ${{ env.CACHE_KEY }}

  deploy-example:
    needs: build-ambient
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        example:
          - basics/asset_loading
          - basics/async
          - games/minigolf
          - games/music_sequencer
          - games/pong
          - games/tictactoe
          - ui/audio_ctrl

    steps:
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y tree libasound2-dev libglib2.0-dev libxcb-shape0-dev libxcb-xfixes0-dev \
            libcairo-dev libgtk2.0-dev libsoup2.4-dev libgtk-3-dev libwebkit2gtk-4.0-dev xorg-dev ninja-build libxcb-render0-dev
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: wasm32-unknown-unknown
      - name: Fetch ambient exectuable artifact from cache
        uses: actions/cache/restore@v3
        with:
          path: target/release/ambient
          key: ${{ env.CACHE_KEY }}
      - name: Deploy ${{ matrix.example }}
        run: target/release/ambient deploy --release --token ${{ secrets.AMBIENT_CLOUD_DEPLOY_TOKEN }} guest/rust/examples/${{ matrix.example }}
