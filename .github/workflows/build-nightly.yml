name: "build-nightly"

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    permissions:
        id-token: write
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            exe_name: ambient
          - os: macos-latest
            target: aarch64-apple-darwin
            exe_name: ambient
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            exe_name: ambient.exe

    runs-on: ${{ matrix.os }}
    env:
      EXE_DIR: target/${{ matrix.target }}/release
    steps:
      - name: Free up disk space
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: Install build dependencies
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y tree libasound2-dev libglib2.0-dev libxcb-shape0-dev libxcb-xfixes0-dev \
            libcairo-dev libgtk2.0-dev libsoup2.4-dev libgtk-3-dev libwebkit2gtk-4.0-dev xorg-dev ninja-build libxcb-render0-dev clang nodejs
      - uses: actions/checkout@v3
      - name: Install aarch64-apple-darwin
        if: matrix.target == 'aarch64-apple-darwin'
        run: rustup target add aarch64-apple-darwin
      - uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: Leafwing-Studios/cargo-cache@v1.1.0

      - name: Build
        run: cargo build --release -p ambient --target ${{ matrix.target }}
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0"

      # - name: Build
      #   run: cargo build -p ambient --release
      #   env:
      #     CARGO_INCREMENTAL: 0
      #     RUSTFLAGS: "-C debuginfo=0"

      - name: Install certificate (OSX)
        if: matrix.os == 'macos-latest'
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.MACOS_CERTIFICATE }}
          p12-password: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      - name: Codesign executable (OSX)
        if: matrix.os == 'macos-latest'
        run: /usr/bin/codesign --force -s ${{ secrets.MAC_CODESIGN }} --options=runtime --entitlements app/osx_entitlements.xml --deep ${{ env.EXE_DIR }}/${{ matrix.exe_name }} -v
      - name: Bundle
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: "zip"
          filename: ambient-${{ matrix.target }}.zip
          directory: ${{ env.EXE_DIR }}
          path: ${{ matrix.exe_name }}
      - name: Notarize app bundle (OSX)
        if: matrix.os == 'macos-latest'
        run: |
          cd ${{ env.EXE_DIR }}
          xcrun notarytool store-credentials "notarytool-profile" --apple-id "${{ secrets.APPLE_DEVELOPER_EMAIL }}" --team-id="${{ secrets.APPLE_TEAM_ID }}" --password "${{ secrets.APPLE_DEVELOPER_PASSWORD }}"
          xcrun notarytool submit "ambient-${{ matrix.target }}.zip" --keychain-profile "notarytool-profile" --wait
      - name: Set date suffix
        run: echo "date_suffix=$(date +%Y-%m-%d)" >> $GITHUB_ENV
        shell: bash

      # - name: Upload ambient executable artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ambient-${{ matrix.os }}
      #     path: |
      #       target/release/ambient
      #       target/release/ambient.exe

      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          token_format: access_token
          workload_identity_provider: projects/549180905870/locations/global/workloadIdentityPools/github-pool/providers/github-provider
          service_account: github@ambient-733e7.iam.gserviceaccount.com
          access_token_lifetime: 1800s

      - name: Upload to Google Cloud
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: ${{ env.EXE_DIR }}/ambient-${{ matrix.target }}.zip
          destination: "ambient-artifacts/ambient-nightly-build/${{ env.date_suffix }}/${{ matrix.os }}"
