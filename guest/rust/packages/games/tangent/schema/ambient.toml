[package]
id = "mwrcsok65na7owrbdococ5sthr3ccskc"
name = "Tangent Schema"
version = "0.1.0"
content = { type = "Asset", schema = true }
authors = ["philpax"]

[dependencies]
game_object = { path = "../../../schemas/game_object" }

[components]
# Player
"player::vehicle_ref" = { type = "EntityId", name = "Player's Vehicle", description = "The player's vehicle", attributes = [
    "Networked",
    "Debuggable",
] }
"player::input_direction" = { type = "Vec2", name = "Input Direction", description = "Input direction" }
"player::input_jump" = { type = "Bool", name = "Jump", description = "Jump" }
"player::input_fire" = { type = "Bool", name = "Fire", description = "Fire" }
"player::input_respawn" = { type = "Bool", name = "Respawn", description = "Respawn" }
"player::input_aim_direction" = { type = "Vec2", name = "Aim Direction", description = "Aim direction in degrees from the centre" }
"player::vehicle_class" = { type = "EntityId", name = "Vehicle Class", description = "The player's vehicle class", attributes = [
    "Networked",
    "Debuggable",
] }

# Vehicle def
"vehicle::def::thruster::offsets" = { type = { type = "Vec", element_type = "Vec2" }, name = "Thruster Offsets", description = "Offsets of the thrusters from the center of the vehicle", attributes = [
    "Networked",
] }
"vehicle::def::thruster::k_p" = { type = "F32", name = "Thruster K_p", description = "Proportional gain for the thrusters", attributes = [
    "Networked",
] }
"vehicle::def::thruster::k_d" = { type = "F32", name = "Thruster K_d", description = "Derivative gain for the thrusters", attributes = [
    "Networked",
] }
"vehicle::def::thruster::target" = { type = "F32", name = "Thruster Target Altitude", description = "Target altitude for the thrusters", attributes = [
    "Networked",
] }
"vehicle::def::thruster::max_strength" = { type = "F32", name = "Thruster Max Strength", description = "Maximum strength of the thrusters", attributes = [
    "Networked",
] }

"vehicle::def::input::forward_force" = { type = "F32", name = "Forward Force", description = "Forward force applied to the vehicle on input", attributes = [
    "Networked",
] }
"vehicle::def::input::backward_force" = { type = "F32", name = "Backward Force", description = "Backward force applied to the vehicle on input", attributes = [
    "Networked",
] }
"vehicle::def::input::forward_offset" = { type = "Vec2", name = "Forward Offset", description = "Offset of the forward force from the center of the vehicle. Typically at the back of the vehicle.", attributes = [
    "Networked",
] }

"vehicle::def::input::side_force" = { type = "F32", name = "Side Force", description = "Side force applied to the vehicle on input", attributes = [
    "Networked",
] }
"vehicle::def::input::side_offset" = { type = "Vec2", name = "Side Offset", description = "Offset of the side force from the center of the vehicle. Typically at the front of the vehicle.", attributes = [
    "Networked",
] }

"vehicle::def::input::jump_force" = { type = "F32", name = "Jump Force", description = "Jump force applied to the vehicle on input", attributes = [
    "Networked",
] }

"vehicle::def::input::pitch_strength" = { type = "F32", name = "Pitch Strength", description = "Strength of the pitch applied to the applicable thrusters of the vehicle on input", attributes = [
    "Networked",
] }
"vehicle::def::input::turning_strength" = { type = "F32", name = "Turning Strength", description = "Strength of the turning applied to the applicable thrusters of the vehicle on input", attributes = [
    "Networked",
] }

"vehicle::def::input::jump_timeout" = { type = "Duration", name = "Jump Timeout", description = "Timeout between jumps", attributes = [
    "Networked",
] }

"vehicle::def::input::aim_direction_limits" = { type = "Vec2", name = "Aim Direction Limits", description = "Limits of the aim direction in degrees from the centre", attributes = [
    "Networked",
] }

"vehicle::def::slowdown::linear_strength" = { type = "F32", name = "Linear Strength", description = "Strength of the linear slowdown applied to the vehicle", attributes = [
    "Networked",
] }
"vehicle::def::slowdown::angular_strength" = { type = "F32", name = "Angular Strength", description = "Strength of the angular slowdown applied to the vehicle", attributes = [
    "Networked",
] }
"vehicle::def::slowdown::angular_delay" = { type = "Duration", name = "Angular Delay", description = "Time to wait before applying angular slowdown", attributes = [
    "Networked",
] }

"vehicle::def::model_url" = { type = "String", name = "Model URL", description = "URL of the model for the vehicle def", attributes = [
    "Networked",
] }
"vehicle::def::model_scale" = { type = "F32", name = "Model Scale", description = "Scale of the model for the vehicle def", attributes = [
    "Networked",
] }

# Vehicle
"vehicle::is_vehicle" = { type = "Empty", name = "Is Vehicle", description = "Is a vehicle", attributes = [
    "Networked",
] }
"vehicle::driver_ref" = { type = "EntityId", name = "Vehicle Driver", description = "A vehicle's driver, if present", attributes = [
    "Networked",
] }
"vehicle::def_ref" = { type = "EntityId", name = "Vehicle Definition Ref", description = "When attached to a vehicle-specific entity (class or live vehicle), indicates that it should draw its properties from this entity.", attributes = [
    "Networked",
] }
"vehicle::aimable_weapon_refs" = { type = { type = "Vec", element_type = "EntityId" }, name = "Aimable Weapon Refs", description = "All aimable weapons for this vehicle. If present in this array, their rotations will be automatically updated to match the aim position. Assumes that the weapons are a child of the vehicle.", attributes = [
    "Networked",
] }

"vehicle::last_distances" = { type = { type = "Vec", element_type = "F32" }, name = "Last Distances", description = "Distances from the ground for each vehicle probe", attributes = [
    "Networked",
] }
"vehicle::last_jump_time" = { type = "Duration", name = "Last Jump Time", description = "The last time the player jumped", attributes = [
    "Networked",
] }
"vehicle::last_slowdown_time" = { type = "Duration", name = "Last Slowdown Time", description = "The last time the player's vehicle was slowed down", attributes = [
    "Networked",
] }
"vehicle::last_upside_down_time" = { type = "Duration", name = "Last Upside Down Time", description = "The last time the player's vehicle was known to be upside down. Added when first detected, removed when no longer the case. Used to respawn the vehicle after some time.", attributes = [
    "Networked",
] }

"vehicle::input_direction" = { type = "Vec2", name = "Input Direction", description = "Input direction" }
"vehicle::input_jump" = { type = "Bool", name = "Jump", description = "Jump" }
"vehicle::input_fire" = { type = "Bool", name = "Fire", description = "Fire" }
"vehicle::input_aim_direction" = { type = "Vec2", name = "Aim Direction", description = "Aim direction in degrees from the centre" }
"vehicle::aim_distance" = { type = "F32", name = "Aim Distance", description = "Distance of the aim target from the vehicle", attributes = [
    "Networked",
] }

# Vehicle (server-only)
"vehicle::aim_position" = { type = "Vec3", name = "Aim Position", description = "Position of the aim target" }

# Vehicle (client-only)
"vehicle::client::speed_kph" = { type = "F32", name = "Speed (KPH)", description = "Speed of the vehicle in kilometers per hour." }

# Vehicle class
"vehicle::class::is_class" = { type = "Empty", name = "Is Class", description = "Is a vehicle class", attributes = [
    "Networked",
] }
"vehicle::class::name" = { type = "String", name = "Name", description = "Name of the vehicle class", attributes = [
    "Networked",
] }
"vehicle::class::description" = { type = "String", name = "Description", description = "Description of the vehicle class", attributes = [
    "Networked",
] }
"vehicle::class::icon_url" = { type = "String", name = "Icon URL", description = "URL of the icon for the vehicle class", attributes = [
    "Networked",
] }

# Spawnpoint
"spawnpoint::is_spawnpoint" = { type = "Empty", name = "Is Spawnpoint", description = "Is a spawnpoint", attributes = [
    "Networked",
] }
"spawnpoint::radius" = { type = "F32", name = "Radius", description = "Radius of the spawnpoint", attributes = [
    "Networked",
] }

# Weapon
"weapon::fire" = { type = "Bool", name = "Fire", description = "When on, the weapon will attempt to fire.", attributes = [
    "Networked",
] }

[concepts.VehicleDef]
name = "Vehicle Definition"
description = "Definition for a vehicle"
[concepts.VehicleDef.components.required]
"ambient_core::physics::density" = {}
"ambient_core::physics::cube_collider" = {}

"game_object::max_health" = {}

"vehicle::def::thruster::offsets" = {}
"vehicle::def::thruster::k_p" = {}
"vehicle::def::thruster::k_d" = {}
"vehicle::def::thruster::target" = {}
"vehicle::def::thruster::max_strength" = {}

"vehicle::def::input::forward_force" = {}
"vehicle::def::input::backward_force" = {}
"vehicle::def::input::forward_offset" = {}

"vehicle::def::input::side_force" = {}
"vehicle::def::input::side_offset" = {}

"vehicle::def::input::jump_force" = {}

"vehicle::def::input::aim_direction_limits" = {}

"vehicle::def::input::pitch_strength" = {}
"vehicle::def::input::turning_strength" = {}

"vehicle::def::input::jump_timeout" = {}

"vehicle::def::slowdown::linear_strength" = {}
"vehicle::def::slowdown::angular_strength" = {}
"vehicle::def::slowdown::angular_delay" = {}

"vehicle::def::model_url" = {}
"vehicle::def::model_scale" = {}

[concepts.Vehicle]
name = "Vehicle"
description = "A vehicle with a physical representation"
[concepts.Vehicle.components.required]
"ambient_core::physics::linear_velocity" = {}
"ambient_core::physics::angular_velocity" = {}
"ambient_core::physics::physics_controlled" = {}
"ambient_core::physics::dynamic" = {}
"ambient_core::physics::density" = {}
"ambient_core::physics::cube_collider" = {}

"ambient_core::transform::local_to_world" = {}
"ambient_core::transform::translation" = {}
"ambient_core::transform::rotation" = {}

"game_object::health" = {}
"game_object::max_health" = {}

"vehicle::is_vehicle" = {}

"vehicle::last_distances" = {}
"vehicle::last_jump_time" = {}
"vehicle::last_slowdown_time" = {}
"vehicle::def_ref" = {}

"vehicle::input_direction" = {}
"vehicle::input_jump" = {}
"vehicle::input_fire" = {}
"vehicle::input_aim_direction" = {}
[concepts.Vehicle.components.optional]
"vehicle::driver_ref" = {}
"vehicle::last_upside_down_time" = {}
"vehicle::aim_position" = {}
"vehicle::aimable_weapon_refs" = {}

[concepts.VehicleClass]
name = "Vehicle Class"
description = "A vehicle class"
[concepts.VehicleClass.components.required]
"vehicle::class::is_class" = {}
"vehicle::class::name" = {}
"vehicle::class::description" = {}
"vehicle::class::icon_url" = {}
"vehicle::def_ref" = {}

[concepts.Spawnpoint]
name = "Spawnpoint"
description = "A spawnpoint"
[concepts.Spawnpoint.components.required]
"spawnpoint::is_spawnpoint" = {}
"spawnpoint::radius" = {}
"ambient_core::transform::translation" = {}
"ambient_core::rendering::color" = {}
