{
    "check": {
        "cmd": "cargo check"
    },
    "client": {
        "cmd": "cargo run -p ambient"
    },
    "third-person-camera-release": {
        "cmd": "cargo run --features profile --release -- run ./guest/rust/examples/basics/third_person_camera"
    },
    "third-person-camera": {
        "cmd": "cargo run --features tracing -- run ./guest/rust/examples/basics/third_person_camera --debugger"
    },
    "primitives": {
        "cmd": "cargo build",
        "components": {
            "dap": {
                "program": "./target/debug/ambient",
                "args": [
                    "run",
                    "./guest/rust/examples/basics/primitives"
                ],
                "adapter": "rust",
                "env": {
                    "RUST_LOG": "ambient_renderer=info,ambient_network=debug,info"
                }
            }
        }
    },
    "gi-samplers": {
        "cmd": "cargo run --release -- run --release guest/rust/examples/basics/samplers --headless --no-proxy --quic-interface-port 9009 --http-interface-port 10009 golden-image-check --timeout-seconds 30.0",
        "env": {
            "RUST_LOG": "ambient_network=debug,ambient_wasm=debug,ambient=debug,ambient_ecs=info,ambient_renderer=warn,ambient_std=debug,ambient_network::client_game_state=info,ambient_element=warn,ambient_app=warn,info"
        }
    },
    "join": {
        "cmd": [
            "cargo",
            "run",
            "join",
            "localhost:9000",
            "--debugger"
        ],
        "env": {
            "RUST_LOG": "ambient_renderer=debug,ambient_gpu=debug,info"
        }
    },
    "debug-join": {
        "cmd": [
            "cargo",
            "build",
            "--message-format=json",
            "--features",
            "tracing"
        ],
        "components": {
            "cargo-dap": {
                "args": [
                    "join",
                    "localhost:9000",
                    "--debugger"
                ]
            }
        }
    },
    "asset-loading": {
        "cmd": "cargo run -- run ./guest/rust/examples/basics/asset_loading --clean-build --debugger",
        "env": {
            "RUST_LOG": "ambient_renderer=debug,info"
        }
    },
    "serve-primitives": {
        "cmd": "cargo run --features tracing -- serve ./guest/rust/examples/basics/primitives/",
        "env": {
            "RUST_LOG": "ambient_network=debug,info"
        }
    },
    "serve-physics": {
        "cmd": "cargo run --features tracing -- serve ./guest/rust/examples/basics/physics/ --clean-build",
        "env": {
            "RUST_LOG": "ambient_network=debug,info"
        }
    },
    "samplers": {
        "cmd": [
            "cargo",
            "run",
            "--features",
            "tracing",
            "--",
            "serve",
            "./guest/rust/examples/basics/samplers/"
        ],
        "env": {
            "RUST_LOG": "ambient_network=debug,info"
        }
    },
    "debug-samplers": {
        "cmd": [
            "cargo",
            "build",
            "--message-format=json",
            "--features",
            "tracing"
        ],
        "components": {
            "cargo-dap": {
                "args": [
                    "run",
                    "./guest/rust/examples/basics/samplers/"
                ]
            }
        },
        "env": {
            "RUST_LOG": "ambient_network=debug,info"
        }
    },
    "minigolf": {
        "cmd": "cargo run -- run ./guest/rust/examples/games/minigolf"
    },
    "minigolf-release": {
        "cmd": "cargo run --release -- run --release ./guest/rust/examples/games/minigolf"
    },
    "tictactoe": {
        "cmd": "cargo run -- run ./guest/rust/examples/games/tictactoe"
    },
    "fog": {
        "cmd": "cargo run -- run ./guest/rust/examples/basics/fog/"
    },
    "skinmesh": {
        "cmd": "cargo run -- run ./guest/rust/examples/basics/skinmesh"
    },
    "debug-third-person-camera": {
        "cmd": "cargo build -p ambient --features tracing",
        "components": {
            "dap": {
                "program": "./target/debug/ambient",
                "adapter": "rust",
                "justMyCode": true,
                "args": [
                    "run",
                    "./guest/rust/examples/basics/third_person_camera"
                ]
            }
        }
    },
    "debug-minigolf": {
        "cmd": "cargo build -p ambient",
        "components": {
            "dap": {
                "program": "./target/debug/ambient",
                "adapter": "rust",
                "args": [
                    "run",
                    "./guest/rust/examples/games/minigolf"
                ]
            }
        }
    },
    "debug-pbr": {
        "cmd": "cargo build -p ambient_renderer --example pbr",
        "components": {
            "dap": {
                "program": "./target/debug/examples/pbr",
                "adapter": "rust"
            }
        }
    },
    "check-all": {
        "cmd": "cargo check --workspace --all-targets"
    },
    "test": {
        "cmd": "cargo nextest run --workspace"
    },
    "client-spatial": {
        "cmd": [
            "cargo",
            "build",
            "--message-format=json",
            "--package",
            "ambient_world_audio",
            "--example",
            "client_spatial",
            "--"
        ],
        "components": {
            "cargo-dap": {}
        }
    },
    "launch-chrome": {
        "cmd": "./scripts/launch_chrome.sh"
    },
    "build-web": {
        "cmd": "wasm-pack build client --dev",
        "cwd": "web",
        "components": {
            "qf": {
                "compiler": "cargo"
            }
        }
    },
    "run": {
        "cmd": "npm run dev",
        "cwd": "web/www",
        "env": {
            "RUST_LOG": "info"
        }
    },
    "migrate-pipelines-toml": {
        "cmd": [
            "cargo",
            "run",
            "--",
            "assets",
            "guest/rust/examples/basics/asset_loading",
            "migrate-pipelines-toml"
        ],
        "env": {
            "RUST_LOG": "ambient_build=info"
        }
    },
    "serve": {
        "cmd": "npm run dev",
        "cwd": "web/www",
        "components": {
            "qf": false
        },
        "env": {
            "RUST_LOG": "info"
        }
    },
    "serve-bundle": {
        "depends_on": [
            "build-web",
            "serve-primitives",
            "serve"
        ]
    },
    "instancing": {
        "cmd": [
            "cargo",
            "run",
            "--features",
            "tracing",
            "--",
            "run",
            "./guest/rust/examples/basics/instancing",
            "--clean-build"
        ]
    },
    "instancing-release": {
        "cmd": [
            "cargo",
            "run",
            "--features",
            "tracing",
            "--release",
            "--",
            "run",
            "./guest/rust/examples/basics/instancing",
            "--clean-build",
            "--release"
        ]
    },
    "golden-images": {
        "cmd": [
            "cargo",
            "cf",
            "golden-images",
            "check"
        ],
        "env": {
            "RUST_LOG": "ambient_network=debug,ambient=debug,info"
        }
    }
}
